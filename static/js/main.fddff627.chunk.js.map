{"version":3,"sources":["logo.svg","components/Coin/Coin.jsx","components/CoinList/CoinList.jsx","components/AccountBalance/AccountBalance.jsx","App.js","reportWebVitals.js","index.js"],"names":["Td","styled","td","Coin","props","className","name","ticker","price","showBalance","balance","action","method","onClick","event","preventDefault","handleRefresh","tickerId","CoinList","coinData","map","key","Section","section","AccountBalance","buttonText","content","amount","handleBalanceVisibilityChange","formatPrice","parseFloat","Number","toFixed","App","useState","setShowBalance","setCoinData","componentDidMount","a","axios","get","response","coinIds","data","slice","coin","id","promises","Promise","all","coinPriceData","symbol","quotes","USD","useEffect","length","valueChangeId","tickerUrl","newPrice","newCoinData","values","newValues","oldValue","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.fddff627.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import React from 'react';\n// import './Coin.css';\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components';\n\nconst Td = styled.td`\n    border: 1px solid #cccccc;\n    width: 25vh;\n`;\n\nexport default function Coin(props){\n\n    const handleClick = (event) => {\n        event.preventDefault(); \n\n        props.handleRefresh(props.tickerId);\n    }\n\n    return (\n        <tr className=\"coin-row\">\n            <Td>{props.name}</Td>\n            <Td>{props.ticker}</Td>\n            <Td>${props.price}</Td>\n            {props.showBalance?<Td>${props.balance}</Td>:null}\n            <Td>\n                <form action=\"#\" method=\"POST\">\n                    <button onClick={handleClick}>Refresh</button>\n                </form>\n            </Td>\n        </tr>                 \n    )\n}\n\n\nCoin.propTypes = {\n    name: PropTypes.string.isRequired,\n    ticker: PropTypes.string.isRequired,\n    price: PropTypes.number.isRequired\n}","import React from 'react';\nimport Coin from '../Coin/Coin';\n\nexport default function CoinList(props)  {\n  return (\n      <table className=\"coin-table\">\n      <thead>\n        <tr>\n        <th>Name</th>\n        <th>Ticker</th>\n        <th>Price</th>\n        {props.showBalance?<th>Balance</th>:null}\n        <th>Actions</th>\n        </tr>\n      </thead>\n      <tbody>\n        {\n          props.coinData.map( ({key, name, ticker, price, balance })  =>  \n            <Coin key={key} \n              tickerId={key} \n              handleRefresh={props.handleRefresh}\n              name={name} \n              ticker={ticker} \n              price={price} \n              balance={balance} \n              showBalance={props.showBalance} \n              />\n              \n          )\n        }\n      </tbody>\n    </table>\n    )\n\n}\n\n","import React from 'react';\nimport PropTypes from 'prop-types';\n// import './AccountBalance.css';\nimport styled from 'styled-components';\n\n\nconst Section = styled.section`\n    \n    font-size: 2rem;\n    text-align: left;\n    padding: 1.5rem 0 1.5rem 5rem;\n`;\n\nexport default function AccountBalance (props) {\n\n    const buttonText = props.showBalance?'hide':'show';\n    let content = null;\n    if (props.showBalance){\n        content =  <>Balance:   ${props.amount}</>;\n    }\n    return (\n        <Section>\n            {content}\n            <button onClick={props.handleBalanceVisibilityChange}>{buttonText}</button>\n        </Section> \n    )\n\n}\n\n\nAccountBalance.propTypes = {\n    amount: PropTypes.number.isRequired\n}","\nimport React, {useState, useEffect} from 'react';\n// import './App.css';\nimport logo from './logo.svg';\nimport Coin from './components/Coin/Coin';\nimport CoinList       from './components/CoinList/CoinList';\nimport AccountBalance from './components/AccountBalance/AccountBalance';\nimport axios from 'axios';\n\n\nconst COIN_COUNT = 5;\nconst formatPrice = price => parseFloat(Number(price).toFixed(6))\n\nfunction App(props) {\n\nvar state = {\n    balance: 1000000,\n    showBalance: true,\n    coinData: [\n      /*\n      {\n        name: 'Bitcoin',\n        ticker: 'BTC',\n        price: 30000,\n        balance: 0.5\n      },\n      {\n        name: 'Ethereum',\n        ticker: 'ETH',\n        price: 10000,\n        balance: 10.5\n      },\n      {\n        name: 'CranePay',\n        ticker: 'CRP',\n        price: 1.2,\n        balance: 300000\n      }*/\n    ]\n  };\n\n  const[balance, setBalance] = useState(10000);\n  const[showBalance, setShowBalance] = useState(true);\n  const[coinData, setCoinData] = useState([]);\n\n\n  const  componentDidMount = async () => {\n    \n    let response = await axios.get(\"https://api.coinpaprika.com/v1/coins\")\n    // debugger;\n    let coinIds = response.data.slice(0, COIN_COUNT).map( coin => coin.id);\n\n    const tickerUrl = 'https://api.coinpaprika.com/v1/tickers/';\n    \n    const promises = coinIds.map( id => axios.get(tickerUrl + id));\n\n    const coinData = await Promise.all(promises);\n\n    const coinPriceData = coinData.map( function(response){\n      const coin = response.data;\n      return {\n        key: coin.id,\n        id:  coin.id,\n        name: coin.name,\n        ticker: coin.symbol, \n        balance: 0,\n        price: formatPrice(coin.quotes.USD.price),\n      }\n    })\n// debugger;\n    setCoinData(coinPriceData);\n\n  }\n\n\n\n  useEffect( function(){\n    if (coinData.length === 0){\n      // did mount\n      componentDidMount();\n\n    }else{\n      // did update\n\n    }\n  });\n\n\n  // constructor(props){\n  //   super(props);\n  // }\n\n\nconst  handleBalanceVisibilityChange = () =>{\n  setShowBalance(oldValue => !oldValue)\n}\n\nconst handleRefresh = async (valueChangeId) => {\n  const tickerUrl = `https://api.coinpaprika.com/v1/tickers/${valueChangeId}`;\n  const response = await axios.get(tickerUrl);\n  const newPrice = formatPrice(response.data.quotes.USD.price);\n  const newCoinData = coinData.map(  function( values ) {\n    \n    let newValues = {...values};\n\n    if(valueChangeId === values.key){\n      newValues.price = newPrice;\n    }\n\n    return newValues;\n  });\n  \n  setCoinData(newCoinData);\n}\n\n  \n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        {/* <img src={logo} alt=\"React Logo\"/> */}\n        <h1>Coin Exchange</h1>\n      </header>\n      <AccountBalance \n        amount={balance} \n        showBalance={showBalance} \n        handleBalanceVisibilityChange={handleBalanceVisibilityChange}\n      />\n      <CoinList \n        coinData={coinData} \n        handleRefresh={handleRefresh} \n        showBalance={state.showBalance}/>\n    </div>\n  );\n\n\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}